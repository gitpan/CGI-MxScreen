: # feed this into perl
	eval 'exec perl -S $0 ${1+"$@"}'
		if $running_under_some_shell;

#
# $Id: enter_leave,v 0.1 2001/04/22 17:57:04 ram Exp $
#
#  Copyright (c) 1998-2001, Raphael Manfredi
#  Copyright (c) 2000-2001, Christophe Dehaudt
#  
#  You may redistribute only under the terms of the Artistic License,
#  as specified in the README file that comes with the distribution.
#
# HISTORY
# $Log: enter_leave,v $
# Revision 0.1  2001/04/22 17:57:04  ram
# Baseline for first Alpha release.
#
# $EndLog$
#

require CGI::MxScreen;

package SCREEN_A;

use CGI qw/:standard/;
use base qw(CGI::MxScreen::Screen);

sub enter {
	my $self = shift;
	$self->{enter}++;
	$self->{leave} = 0 unless exists $self->{leave};
}

sub trace_counters {
	my $self = shift;
	my $enter = $self->{enter};
	my $leave = $self->{leave};
	print p("enter-leave counters are $enter-$leave");
}

sub display {
	my $self = shift;
	print h1($self->screen_title);
	$self->trace_counters;

	my $ok = $self->record_button(
		-name		=> "ok",
		-value		=> "OK",
		-target		=> "B",
	);

	my $redraw = $self->record_button(
		-name		=> "redraw",
		-value		=> "Redraw",
		-target		=> $self->current_screen,
	);

	print submit($ok->properties), submit($redraw->properties);
}

sub leave {
	my $self = shift;
	$self->{leave}++;
}

package SCREEN_B;

use CGI qw/:standard/;
use vars qw(@ISA);
@ISA = qw(SCREEN_A);		# inherits enter() and leave()

sub display {
	my $self = shift;
	print h1($self->screen_title);
	$self->trace_counters;

	my $back = $self->record_button(
		-name		=> "back",
		-value		=> "Back",
		-target		=> $self->spring_screen,
	);

	print submit($back->properties);
}

package main;

my $manager = CGI::MxScreen->make(
	-screens	=>
		{
			'A'	=> [-class => 'SCREEN_A',	-title => "Screen A" ],
			'B'	=> [-class => 'SCREEN_B',	-title => "Screen B" ],
		},
	-initial	=> ['A'],
);

$manager->play();

